{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport * as authService from '../../services/auth';\nimport { setToken, removeToken } from '../../utils/jwt';\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.login(credentials);\n    setToken(response.token);\n    return response.user;\n  } catch (error) {\n    var _error$response;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authService.register(userData);\n    setToken(response.token);\n    return response.user;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error.message);\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  await authService.logout();\n  removeToken();\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    isAuthenticated: false,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    clearAuth: state => {\n      state.user = null;\n      state.isAuthenticated = false;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(login.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(login.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(register.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.loading = false;\n      state.isAuthenticated = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.isAuthenticated = false;\n    });\n  }\n});\nexport const {\n  clearAuth\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","setToken","removeToken","login","credentials","rejectWithValue","response","token","user","error","_error$response","data","message","register","userData","_error$response2","logout","authSlice","name","initialState","isAuthenticated","loading","reducers","clearAuth","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["C:/Users/htw72/htw/client/src/redux/slices/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as authService from '../../services/auth';\r\nimport { setToken, removeToken } from '../../utils/jwt';\r\n\r\nexport const login = createAsyncThunk(\r\n  'auth/login',\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.login(credentials);\r\n      setToken(response.token);\r\n      return response.user;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const register = createAsyncThunk(\r\n  'auth/register',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await authService.register(userData);\r\n      setToken(response.token);\r\n      return response.user;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || error.message);\r\n    }\r\n  }\r\n);\r\n\r\nexport const logout = createAsyncThunk('auth/logout', async () => {\r\n  await authService.logout();\r\n  removeToken();\r\n});\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    user: null,\r\n    isAuthenticated: false,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    clearAuth: (state) => {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(register.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(register.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.isAuthenticated = true;\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(register.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(logout.fulfilled, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { clearAuth } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}